@using ProjectGPT.Models
@using Markdig;
@using ColorCode.Styling;

@inject IJSRuntime JavaScript;

<div class="conversation-area" @ref="ChatRef">

    @foreach (var result in Conversation.ConversationHistory)
    {
        <div class="conversation-item @(result.User == "AI" ? "ai-reply" : "")">
            <div>
                @((MarkupString)@RenderHtmlContent(result.Message))
            </div>
        </div>
    }

</div>


@code {
    [Parameter]
    public Conversation Conversation { get; set; }

    private ElementReference ChatRef;



    // Funktionene använder markdig biblioteket för  att göra om content till HTML, och använder extentions igenom markdig.
    private string RenderHtmlContent(string content) =>
    Markdig.Markdown.ToHtml(markdown: content, pipeline: new MarkdownPipelineBuilder()
    .UseAdvancedExtensions()
    .UseSyntaxHighlighting(StyleDictionary.DefaultDark)
    .Build()
    );

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        ScrollToEnd();
        return base.OnAfterRenderAsync(firstRender);
    }

    private void ScrollToEnd()
    {
        JavaScript.InvokeVoidAsync("ChatGPTMethods.scrollToEnd", new object[] { ChatRef });
    }

}
